<%= form_with(model: @user, url: users_path) do |form| %>
  <h1 class="mb-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white">New User Form</h1>

  <% if @user.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@user.errors.count, "error") %> prohibited this user from being saved:</h2>
      <ul>
        <% @user.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div class="mb-5">
    <%= form.label :name, class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
    <%= form.text_field :name %>
  </div>

  <div class="mb-5">
    <%= form.label :email, class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
    <%= form.email_field :email %>
  </div>

  <div class="mb-5">
    <%= form.label :campaigns_list, 'Campaigns List (JSON)', class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
  </div>

  <div id="campaign_data">
    <div class="mb-5 campaign-fields">
      <%= form.label :campaign_name, class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
      <%= form.text_field :campaigns_name, name: "user[campaigns_list][]campaign_name" %>
      <%= form.label "campaign id", class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
      <%= form.text_field :campaigns_id, name: "user[campaigns_list][]campaign_id" %>
      <button type="button" class="remove-field" onclick="removeField(this)">Remove Campaign</button>
    </div>
  </div>

  <div class="controls">
    <%= link_to 'Add campaign', '#', onClick: "addField()" %>
  </div>

  <%= form.submit 'Create User', class: "rounded-lg py-3 px-5 bg-blue-600 text-white block font-medium" %>
  <%= link_to "Back to users", users_path, class: "ml-2 rounded-lg py-3 px-5 bg-gray-100 inline-block font-medium" %>
<% end %>

<script>
  function addField() {
    const container = document.getElementById('campaign_data');
    const newFieldSet = container.firstElementChild.cloneNode(true);
    container.appendChild(newFieldSet);
    setupRemoveButtons();
  }

  function removeField(button) {
    const fieldSetToRemove = button.parentNode;
    fieldSetToRemove.remove();
  }

  function setupRemoveButtons() {
    const removeButtons = document.querySelectorAll('.remove-field');
    removeButtons.forEach(button => {
      button.addEventListener('click', () => {
        removeField(button);
      });
    });
  }

  setupRemoveButtons();
</script>